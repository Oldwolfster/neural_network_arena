<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="arena_history.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="4045"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="ErrorSignalCalcs" custom_title="0" dock_id="1" table="4,11:mainNNA_history"/><dock_state state="000000ff00000000fd0000000100000002000005bb00000398fc0100000001fb000000160064006f0063006b00420072006f00770073006500310100000000000005bb0000013a00ffffff000005bb0000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="NNA_history" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="215"/><column index="2" value="60"/><column index="3" value="146"/><column index="4" value="103"/><column index="5" value="300"/><column index="6" value="151"/><column index="7" value="167"/><column index="8" value="167"/><column index="9" value="107"/><column index="10" value="167"/><column index="11" value="154"/><column index="12" value="153"/><column index="13" value="152"/><column index="14" value="192"/><column index="15" value="119"/><column index="16" value="111"/><column index="17" value="195"/><column index="18" value="127"/><column index="19" value="121"/><column index="20" value="55"/><column index="21" value="47"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1*"> select * from NNA_history 
 -- where timestamp &gt; '2025-06-01 20:44:37.301792' 
 -- and loss_function_name in ('Mean Squared Error','Binary Cross-Entropy')
order by problem_type,accuracy, timestamp DESC
 -- order by timestamp DESC

 
 
 




</sql><sql name="SQL 1* (1)">-- select * from ModelInfo
select run_id, count(1) from  weight group by run_id
 
 
 




</sql><sql name="RamDB.sql" filename="C:/Users/dad/Documents/RamDB.sql">-- Reference to file &quot;C:/Users/dad/Documents/RamDB.sql&quot; (not supported by this version) --</sql><sql name="SQL 4">SELECT r.*
FROM NNA_history r
JOIN (
    -- Insert the Step 1 query here
    SELECT arena, hidden_activation, MIN(timestamp) AS best_timestamp
    FROM NNA_history r
    WHERE NOT EXISTS (
        SELECT 1
        FROM NNA_history r2
        WHERE r2.arena = r.arena
          AND r2.hidden_activation = r.hidden_activation
          AND (
            r2.accuracy &gt; r.accuracy
            OR (r2.accuracy = r.accuracy AND r2.best_mae &lt; r.best_mae)
            OR (r2.accuracy = r.accuracy AND r2.best_mae = r.best_mae AND r2.final_mae &lt; r.final_mae)
          )
    )
    GROUP BY arena, hidden_activation
) winners
ON r.arena = winners.arena
   AND r.hidden_activation = winners.hidden_activation
   AND r.timestamp = winners.best_timestamp
order by problem_type, arena, accuracy DESC ;
</sql><sql name="TopByArena">SELECT *
FROM (
    SELECT 
        r.*, 
        ROW_NUMBER() OVER (PARTITION BY arena ORDER BY accuracy DESC) AS rank
    FROM NNA_history r
    WHERE problem_type = 'Regression' and loss_function='Binary Cross-Entropy'
)
WHERE rank &lt;= 3
ORDER BY arena, rank;
</sql><sql name="Time">SELECT 
  *, 
  runs / (1.0 * diff_seconds / 3600.0) AS runs_per_hour, 
  runs / (1.0 * diff_seconds / 60.0) AS runs_per_min,
  runs / (1.0 * diff_seconds ) AS runs_per_sec
FROM (
	WITH filtered AS (
		SELECT * FROM NNA_history
		-- üîç Optional: Add criteria here, e.g., WHERE problem_type = 'Binary Decision'
	),
	time_diff AS (
		SELECT 
			MIN(timestamp) AS start_time,
			MAX(timestamp) AS end_time,			
			(SELECT COUNT(1) FROM filtered)
			AS runs
		FROM filtered
	)

	SELECT 
		start_time,
		end_time,		
		runs,
		STRFTIME('%s', end_time) - STRFTIME('%s', start_time) AS diff_seconds,
		TIME(STRFTIME('%s', end_time) - STRFTIME('%s', start_time), 'unixepoch') AS diff_hhmmss
	FROM time_diff
) subq;
</sql><current_tab id="0"/></tab_sql></sqlb_project>
